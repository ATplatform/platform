<?phpinclude(APPPATH.'/libraries/include/phpqrcode/qrlib.php');defined('BASEPATH') OR exit('No direct script access allowed');class Activity extends CI_Controller{    public function __construct()    {        parent::__construct();        session_start();        //打开重定向        $this->load->helper('url');        $this->load->database();        $this->user_per_page = $this->config->item('user_per_page');        $this->at_url=$this->config->item('at_url');    }    public function index()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        redirect('Activity/activityList');    }    /////////////////////////////////////////////////////////////////////////////////////////////////    ////////////////////////////////////////activityList/////////////////////////////////////////////    /////////////////////////////////////////////////////////////////////////////////////////////////    /////////////数据展示///////////////    public function activityList()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Activity_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $begin_date=$this->input->get('begin_date');        $type = $this->input->get('type');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'activityList';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $arrayres = $this->Activity_model->sqlTogetList($begin_date,$type, $keyword, $page, $this->user_per_page);        $total = $this->Activity_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/activity_list', $data);    }    //////////////////////查询数据///////////////    public function getList()    {        $begin_date=$this->input->get('begin_date');        $type = $this->input->get('type');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Activity_model');        $arrayres = $this->Activity_model->sqlTogetList($begin_date,$type, $keyword, $page, $this->user_per_page);        $data = $this->Activity_model->getList($arrayres['1']);        echo $data;    }    public function insert(){        $code = $this->input->post('code');        $type = $this->input->post('type');        $name=$this->input->post('name');        $person_code=$this->input->post('person_code');        $service_code=$this->input->post('service_code');        $begin_date=$this->input->post('begin_date');        $end_date=$this->input->post('end_date');        $create_time = date('Y-m-d h:i:s', time());        $this->load->model('Activity_model');        $village_id = $_SESSION['village_id'];        //二维码名称,以活动code命名        $fileName = $code.'.png';        //二维码图片地址        $pngAbsoluteFilePath='';        $temp_path='qrcode/'.$village_id.'_QRCODE_'.'ACTIVITY/';        //生成的二维码图片地址        $pngAbsoluteFilePath = $temp_path.'/'.$fileName;        $this->load->model('Building_model');        //二维码内容,社区活动的二维码type为103        $qrcodeData = $this->Building_model->getQrcodeData(103,$village_id,$code,$pngAbsoluteFilePath);        //生成二维码图片        $this->txtToImg($qrcodeData,$pngAbsoluteFilePath,$temp_path,$name,"");        $this->Activity_model->insert($village_id,$code,$type,$name,$person_code,$service_code, $begin_date,$end_date,$qrcodeData,$create_time);    }    public function txtToImg($qrcodeData,$pngAbsoluteFilePath,$temp_path,$text,$equipment_name){        if (!file_exists($temp_path)){            mkdir($temp_path, 0777, true);        }        //有图片的情况下,先删除原来的图片         if(file_exists($pngAbsoluteFilePath)){            unlink($pngAbsoluteFilePath);        }        QRcode::png($qrcodeData, $pngAbsoluteFilePath,"L",5,13);        //下面是生成文字        //txt为要显示的文字        $size = 16;        //字体路径，微软雅黑        $font =APPPATH.'/libraries/include/font/msyh.ttf';        //打开已经生成好的二维码图片        $im = imagecreatefrompng($pngAbsoluteFilePath);        //设置字体颜色        $black = imagecolorallocate($im, 0, 0, 0);        //加入楼宇地址文字        imagettftext($im, $size, 0, 10, 20, $black, $font, $text);        //加入设备类型文字        imagettftext($im, $size, 0, 10, 50, $black, $font, $equipment_name);        //先删除原来的二维码图片         if(file_exists($pngAbsoluteFilePath)){            unlink($pngAbsoluteFilePath);        }        //重新生成增加了文字的二维码图片        ob_start();            imagejpeg($im);         $img = ob_get_contents();          ob_end_clean();          $fp2=@fopen($pngAbsoluteFilePath, "a");          fwrite($fp2,$img);          fclose($fp2);    }    public function getLatestCode()    {        $this->load->model('Activity_model');        $res = $this->Activity_model->getLatestCode();        echo $res;    } public function getservice_code(){     $this->load->model('Activity_model');     $res = $this->Activity_model->getservice_code();     print_r(json_encode($res)); }    public function getactivity_codeUrl(){        $this->load->model('Activity_model');        $res = $this->Activity_model->getactivity_codeUrl();        print_r(json_encode($res));    }    //////////////////////////////////////////////////////////////////////////////////////////    public function activityRecord()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Activity_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $data['nav'] = 'activityRecord';        $date=$this->input->get('date');        $type = $this->input->get('type');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['keyword'] = $keyword;        $data['type'] = $type;        $data['date'] = $date;        $data['username'] = $username;        $data['at_url']= $this->at_url;        $arrayres = $this->Activity_model->sqlTogetRecord($date,$type, $keyword, $page, $this->user_per_page);        $total = $this->Activity_model->getTotal( $arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/activity_record', $data);    }    public function getRecord()    {        $date=$this->input->get('date');        $type = $this->input->get('type');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Activity_model');        $arrayres = $this->Activity_model->sqlTogetRecord($date,$type, $keyword, $page, $this->user_per_page);        $data = $this->Activity_model->getRecord( $arrayres['1']);        echo $data;    }    public function insertRecord(){        $code = $this->input->post('code');        $person_code=$this->input->post('person_code');        $service_code=$this->input->post('service_code');        $date=$this->input->post('date');        $create_time = date('Y-m-d h:i:s', time());        $this->load->model('Activity_model');        $this->Activity_model->insertRecord($code,$person_code,$service_code, $date,$create_time);    }}