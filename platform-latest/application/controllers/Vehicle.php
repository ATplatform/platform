<?phpinclude(APPPATH.'/libraries/include/phpqrcode/qrlib.php');defined('BASEPATH') OR exit('No direct script access allowed');class Vehicle extends CI_Controller{    public function __construct()    {        parent::__construct();        session_start();        //打开重定向        $this->load->helper('url');        $this->load->database();        $this->user_per_page = $this->config->item('user_per_page');        $this->at_url=$this->config->item('at_url');    }    public function index()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        redirect('Vehicle/vehicleList');    }    /////////////////////////////////////////////////////////////////////////////////////////////////    ////////////////////////////////////////activityList/////////////////////////////////////////////    /////////////////////////////////////////////////////////////////////////////////////////////////    /////////////数据展示///////////////    public function vehicleList()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Vehicle_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data = $this->Building_model->getBuildingTreeData($village_id);        $effective_date=$this->input->get('effective_date');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $if_resident = $this->input->get('if_resident');        $vehicle_type = $this->input->get('vehicle_type');        $vehicle_auz = $this->input->get('vehicle_auz');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'vehicleList';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Vehicle_model->sqlTogetList($effective_date,$building_code,$parent_code,$if_resident,$vehicle_type,$vehicle_auz,$keyword, $page, $this->user_per_page);        $total = $this->Vehicle_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/vehicle_list', $data);    }    //////////////////////查询数据///////////////    public function getList()    {        $effective_date=$this->input->get('effective_date');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $if_resident = $this->input->get('if_resident');        $vehicle_type = $this->input->get('vehicle_type');        $vehicle_auz = $this->input->get('vehicle_auz');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Vehicle_model');        $arrayres = $this->Vehicle_model->sqlTogetList($effective_date,$building_code, $parent_code,$if_resident,$vehicle_type,$vehicle_auz,$keyword, $page, $this->user_per_page);        $data = $this->Vehicle_model->getList($arrayres['1']);        echo $data;    }    public function insert(){            $code = $this->input->post('code');$effective_date = $this->input->post('effective_date');$licence = $this->input->post('licence');$owner = $this->input->post('owner');$color = $this->input->post('color');$model = $this->input->post('model');$remark = $this->input->post('brand');$vehicle_type= $this->input->post('vehicle_type');$person_code= $this->input->post('person_code');$effective_status = $this->input->post('effective_status');        $if_temp = $this->input->post('if_temp');$if_electro = $this->input->post('if_electro');$if_temp = $this->input->post('if_temp');        $auz_code = $this->input->post('auz_code');        $auz_person_code = $this->input->post('auz_person_code');        $begin_date = $this->input->post('begin_date');        $end_date = $this->input->post('end_date');        $auz_remark = $this->input->post('auz_remark');            $create_time = date('Y-m-d h:i:s', time());            $this->load->model('Vehicle_model');        $this->Vehicle_model->insert($code,$effective_date,$licence,$owner,$color, $model,$remark,$vehicle_type,$person_code,$effective_status,$if_temp,$if_electro,$if_temp,$auz_code,$auz_person_code,$begin_date,$end_date,$auz_remark,$create_time);    }    public function getLatestCode()    {        $this->load->model('Vehicle_model');        $res = $this->Vehicle_model->getLatestCode();        echo $res;    }    public function getLatestCodeforauz()    {        $this->load->model('Vehicle_model');        $res = $this->Vehicle_model->getLatestCodeforauz();        echo $res;    }    public function getpresentCodeforauz()    {        $code=$this->input->post('code');        $this->load->model('Vehicle_model');        $res = $this->Vehicle_model->getpresentCodeforauz($code);        print_r(json_encode($res));    } public function getservice_code(){     $this->load->model('Activity_model');     $res = $this->Activity_model->getservice_code();     print_r(json_encode($res)); }    public function getactivity_codeUrl(){        $this->load->model('Activity_model');        $res = $this->Activity_model->getactivity_codeUrl();        print_r(json_encode($res));    }    public function getauz(){        $code = $this->input->get('code');        $this->load->model('Vehicle_model');        $res= $this->Vehicle_model->getauz($code);        print_r(json_encode($res));    }    public function updateVehicle(){        $code = $this->input->post('v_code');        $effective_date = $this->input->post('v_effective_date');        $effective_status= $this->input->post('v_effective_status');        $person_code = $this->input->post('v_person_code');        $licence = $this->input->post('licence');        $owner = $this->input->post('owner');        $color = $this->input->post('color');        $model= $this->input->post('model');        $remark = $this->input->post('v_remark');        $vehicle_type = $this->input->post('vehicle_type');        $if_resident = $this->input->post('if_resident');        $if_electro = $this->input->post('if_electro');        $if_temp = $this->input->post('if_temp');        $create_time = date('Y-m-d h:i:s', time());        $this->load->model('Vehicle_model');        $res= $this->Vehicle_model->updateVehicle($code,$effective_date,$effective_status            ,$person_code,$licence,$owner,$color,$model,$remark,$vehicle_type,$if_resident,$if_electro,$if_temp,$create_time);    }    public function updateAuz(){        $code = $this->input->post('auz_code');        $vehicle_code = $this->input->post('v_code');        $begin_date = $this->input->post('auz_begin_date');        $end_date = $this->input->post('auz_end_date');        $remark= $this->input->post('auz_remark');        $person_code = $this->input->post('auz_person_code');        $create_time = date('Y-m-d h:i:s', time());        $this->load->model('Vehicle_model');        $res= $this->Vehicle_model->updateAuz($code,$vehicle_code,$begin_date            ,$end_date,$remark,$person_code,$create_time);    }    public function vehicleAuz()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Vehicle_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data = $this->Building_model->getBuildingTreeData($village_id);        $effective_date=$this->input->get('effective_date');        $if_resident = $this->input->get('if_resident');        $auz_2 = $this->input->get('auz_2');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'vehicleAuz';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Vehicle_model->sqlTogetAuz($effective_date,$if_resident,$auz_2,$keyword, $page, $this->user_per_page);        $total = $this->Vehicle_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/vehicle_auz', $data);    }    public function getAuzlist()    {        $effective_date=$this->input->get('effective_date');        $if_resident= $this->input->get('if_resident');        $auz_2= $this->input->get('auz_2');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Vehicle_model');        $arrayres = $this->Vehicle_model->sqlTogetAuz($effective_date,$if_resident,$auz_2,$keyword, $page, $this->user_per_page);        $data = $this->Vehicle_model->getAuzlist($arrayres['1']);        echo $data;    }  public function verifyauz(){      $licence=$this->input->post('licence');      $this->load->model('Vehicle_model');      $res = $this->Vehicle_model->verifyauz($licence);      print_r(json_encode($res));     }    public function getauzbyMax_begin_date(){        $code = $this->input->post('code');        $this->load->model('Vehicle_model');        $res= $this->Vehicle_model->getauzbyMax_begin_date($code);        print_r(json_encode($res));    }    /////////////数据展示///////////////    public function parkinglot()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Vehicle_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data = $this->Building_model->getBuildingTreeData($village_id);        $effective_date=$this->input->get('lot_effective_date');        $parkcode = $this->input->get('lot_parkcode');        $floor = $this->input->get('lot_floor');        $biz_type = $this->input->get('lot_biz_type');        $biz_status = $this->input->get('lot_biz_status');        $biz_reason = $this->input->get('lot_biz_reason');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'parkinglot';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Vehicle_model->sqlTogetparkinglot($effective_date,$parkcode,$floor,$biz_type,$biz_status,$biz_reason,$keyword, $page, $this->user_per_page);        $total = $this->Vehicle_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/parkinglot_list', $data);    }    public function getparkinglot()    {        $effective_date=$this->input->get('lot_effective_date');        $parkcode = $this->input->get('lot_parkcode');        $floor = $this->input->get('lot_floor');        $biz_type = $this->input->get('lot_biz_type');        $biz_status = $this->input->get('lot_biz_status');        $biz_reason = $this->input->get('lot_biz_reason');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Vehicle_model');        $arrayres = $this->Vehicle_model->sqlTogetparkinglot($effective_date,$parkcode, $floor,$biz_type,$biz_status,$biz_reason,$keyword, $page, $this->user_per_page);        $data = $this->Vehicle_model->getparkinglot($arrayres['1']);        echo $data;    }    public function getparkingcode()    {        $this->load->model('Vehicle_model');        $res = $this->Vehicle_model->getparkingcode();        print_r(json_encode($res));    }public function updateParkinglot(){    $code = $this->input->post('lot_code');    $effective_date = $this->input->post('lot_effective_date');    $effective_status = $this->input->post('lot_effective_status');    $linked_lot_code= $this->input->post('lot_linked_lot_code');    $begin_date = $this->input->post('lot_begin_date');    $end_date = $this->input->post('lot_end_date');    $area = $this->input->post('lot_area');    $monthly_rent = $this->input->post('lot_monthly_rent');    $parkcode= $this->input->post('lot_parkcode');    $floor = $this->input->post('lot_floor');    $biz_type = $this->input->post('lot_biz_type');    $biz_status = $this->input->post('lot_biz_status');    $biz_reason = $this->input->post('lot_biz_reason');    $owner = $this->input->post('lot_owner');       $remark = $this->input->post('lot_remark');    $this->load->model('Vehicle_model');    $res= $this->Vehicle_model->updateParkinglot($code,$effective_date,$effective_status,$linked_lot_code,$begin_date,$end_date,$area,$monthly_rent,$parkcode,$floor,$biz_type,$biz_status,$biz_reason,$owner,$remark);}/////////////数据展示///////////////    public function vehiclePkg()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Vehicle_model');        $this->load->model('Building_model');        $username=$_SESSION['username'];        $village_id=$_SESSION['village_id'];        $treeNav_data = $this->Building_model->getBuildingTreeData($village_id);        $v_if_temp=$this->input->get('v_if_temp');        $v_vehicle_type= $this->input->get('v_vehicle_type');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $pkg_begin_date = $this->input->get('pkg_begin_date');        $pkg_end_date = $this->input->get('pkg_end_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'vehiclePkg';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Vehicle_model->sqlTogetvehiclepkg($v_if_temp,$v_vehicle_type,$building_code,$parent_code,$pkg_begin_date,$pkg_end_date,$keyword, $page, $this->user_per_page);        $total = $this->Vehicle_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/vehicle_pkg', $data);    }    public function getvehiclepkg()    {        $v_if_temp=$this->input->get('v_if_temp');        $v_vehicle_type= $this->input->get('v_vehicle_type');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $pkg_begin_date = $this->input->get('pkg_begin_date');        $pkg_end_date = $this->input->get('pkg_end_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Vehicle_model');        $arrayres = $this->Vehicle_model->sqlTogetvehiclepkg($v_if_temp,$v_vehicle_type,$building_code,$parent_code,$pkg_begin_date,$pkg_end_date,$keyword, $page, $this->user_per_page);        $data = $this->Vehicle_model->getvehiclepkg($arrayres['1']);        echo $data;    }    public function vehiclePayment()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Vehicle_model');        $this->load->model('Building_model');        $username=$_SESSION['username'];        $village_id=$_SESSION['village_id'];        $treeNav_data = $this->Building_model->getBuildingTreeData($village_id);        $pay_status=$this->input->get('pay_status');        $pay_method=$this->input->get('pay_method');        $pay_specific= $this->input->get('pay_specific');        $issued_time = $this->input->get('pay_issued_time');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'vehiclePayment';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Vehicle_model->sqlTogetvehiclepayment($pay_status,$pay_method,$pay_specific,$issued_time,$keyword, $page, $this->user_per_page);        $total = $this->Vehicle_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/vehicle_payment', $data);    }    public function getvehiclepayment()    {        $pay_status=$this->input->get('pay_status');        $pay_method=$this->input->get('pay_method');        $pay_specific= $this->input->get('pay_specific');        $issued_time = $this->input->get('pay_issued_time');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Vehicle_model');        $arrayres = $this->Vehicle_model->sqlTogetvehiclepayment($pay_status,$pay_method,$pay_specific,$issued_time,$keyword, $page, $this->user_per_page);        $data = $this->Vehicle_model->getvehiclepayment($arrayres['1']);        echo $data;    }}