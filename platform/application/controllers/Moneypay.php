<?phpdefined('BASEPATH') OR exit('No direct script access allowed');require_once APPPATH.'/simple_html_dom/simple_html_dom.php';class Moneypay extends CI_Controller{    public function __construct()    {        parent::__construct();        session_start();        //打开重定向        $this->load->helper('url');        $this->load->database();        $this->user_per_page = $this->config->item('user_per_page');        $this->at_url=$this->config->item('at_url');        $this->msg_ip=$this->config->item('msg_ip');    }    public function index()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        redirect('Moneypay/property_fee');    }    /////////////////////////////////////////////////////////////////////////////////////////////////    ////////////////////////////////////////activityList/////////////////////////////////////////////    /////////////////////////////////////////////////////////////////////////////////////////////////    /////////////数据展示///////////////    public function property_fee()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Moneypay_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data = $this->Building_model->getBuildingTreeData($village_id);        $effective_date=$this->input->get('effective_date');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $if_standard = $this->input->get('property_if_standard');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'property_fee';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Moneypay_model->sqlTogetList_property_fee($if_standard,$building_code, $parent_code,$keyword, $page, $this->user_per_page);        $total = $this->Moneypay_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/property_fee', $data);    }    //////////////////////查询数据///////////////    public function getList()    {        $rent_end_date=$this->input->get('rent_end_date');        $parklot_parkcode = $this->input->get('parklot_parkcode');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Parkrent_model');        $arrayres = $this->Parkrent_model->sqlTogetList($rent_end_date,$parklot_parkcode, $keyword, $page, $this->user_per_page);        $data = $this->Parkrent_model->getList($arrayres['1']);        echo $data;    }    public function update(){        $village_id = $_SESSION['village_id'];        $rent_id = $this->input->post('rent_id');        $rent_begin_date = $this->input->post('rent_begin_date');        $rent_end_date = $this->input->post('rent_end_date');        $rent_pay_type = $this->input->post('rent_pay_type');        $rent_rent = $this->input->post('rent_rent');        $rent_renter = $this->input->post('rent_renter');        $rent_parking_lot_code = $this->input->post('rent_parking_lot_code');        $create_time = date('Y-m-d h:i:s', time());        $this->load->model('Parkrent_model');        $this->Parkrent_model->update($village_id,$rent_id,$rent_begin_date,$rent_end_date,$rent_pay_type,$rent_rent, $rent_renter,$rent_parking_lot_code,$create_time);    }    public function insert(){        $village_id = $_SESSION['village_id'];            $bill_code = $this->input->post('bill_code');        $bill_type = $this->input->post('bill_type');$bill_initial_time = $this->input->post('bill_initial_time');    $bill_amount_insert = $this->input->post('bill_amount_insert');$bill_payer_name = $this->input->post('bill_payer_name');$bill_remark = $this->input->post('bill_remark');        $bill_otcode = $this->input->post('bill_otcode_insert');            $create_time = date('Y-m-d h:i:s', time());            $this->load->model('Moneypay_model');        $this->Moneypay_model->insert($village_id,$bill_code,$bill_type,$bill_initial_time,$bill_amount_insert,$bill_payer_name,$bill_remark,$bill_otcode,$create_time);    }    public function getLatestCode()    {        $this->load->model('Moneypay_model');        $res = $this->Moneypay_model->getLatestCode('village_bill_list');        echo $res;    }    public function getLatestCodeforother()    {        $this->load->model('Moneypay_model');        $village_id = $_SESSION['village_id'];        $res = $this->Moneypay_model->getLatestCodeforother($village_id);        print_r(json_encode($res));    }    public function pkg_fee()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Moneypay_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data=$this->Building_model->getBuildingTreeData($village_id);        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $effective_date=$this->input->get('pkg_effective_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'pkg_fee';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Moneypay_model->sqlTogetList_pkg_fee($effective_date,$keyword, $page, $this->user_per_page);        $total = $this->Moneypay_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/pkg_s_fee', $data);    }    public function getList_pkg_fee(){        $effective_date=$this->input->get('pkg_effective_date');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Moneypay_model');        $arrayres = $this->Moneypay_model->sqlTogetList_pkg_fee($effective_date,$keyword, $page, $this->user_per_page);        $data = $this->Moneypay_model->getList_pkg_fee($arrayres['1']);        echo $data;    }    public function water_fee()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Moneypay_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data=$this->Building_model->getBuildingTreeData($village_id);        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $effective_date=$this->input->get('effective_date');        $parklot_parkcode = $this->input->get('parklot_parkcode');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'water_fee';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Moneypay_model->sqlTogetList_water_fee($effective_date,$keyword, $page, $this->user_per_page);        $total = $this->Moneypay_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/water_fee', $data);    }    public function service_fee()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Moneypay_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data=$this->Building_model->getBuildingTreeData($village_id);        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $service_type = $this->input->get('service_type');        $effective_date=$this->input->get('service_change_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'service_fee';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Moneypay_model->sqlTogetList_service_fee($service_type,$effective_date,$keyword, $page, $this->user_per_page);        $total = $this->Moneypay_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/service_fee', $data);    }    public function order_fee()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Moneypay_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data=$this->Building_model->getBuildingTreeData($village_id);        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $begin_date=$this->input->get('order_begin_date');        $end_date=$this->input->get('order_end_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'order_fee';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Moneypay_model->sqlTogetList_order_fee($begin_date,$end_date,$keyword,$page, $this->user_per_page);        $total = $this->Moneypay_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/order_fee', $data);    }    public function getList_water_fee(){        $effective_date=$this->input->get('effective_date');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Moneypay_model');        $arrayres = $this->Moneypay_model->sqlTogetList_water_fee($effective_date,$keyword, $page, $this->user_per_page);        $data = $this->Moneypay_model->getList_water_fee($arrayres['1']);        echo $data;    }    public function getList_property_fee(){        $effective_date=$this->input->get('effective_date');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $if_standard = $this->input->get('property_if_standard');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Moneypay_model');        $arrayres = $this->Moneypay_model->sqlTogetList_property_fee($if_standard,$building_code, $parent_code,$keyword, $page, $this->user_per_page);        $data = $this->Moneypay_model->getList_property_fee($arrayres['1']);        echo $data;    }    public function getList_service_fee(){       /* $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');*/        $service_type = $this->input->get('service_type');        $effective_date=$this->input->get('service_change_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Moneypay_model');        $arrayres = $this->Moneypay_model->sqlTogetList_service_fee($service_type,$effective_date,$keyword, $page, $this->user_per_page);        $data = $this->Moneypay_model->getList_service_fee($arrayres['1']);        echo $data;    }    public function getList_order_fee(){        $effective_date=$this->input->get('effective_date');        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $begin_date=$this->input->get('order_begin_date');        $end_date=$this->input->get('order_end_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Moneypay_model');        $arrayres = $this->Moneypay_model->sqlTogetList_order_fee($begin_date,$end_date,$keyword,$page, $this->user_per_page);        $data = $this->Moneypay_model->getList_order_fee($arrayres['1']);        echo $data;    }    public function getList_bill_list(){        $village_id = $_SESSION['village_id'];        $begin_date=$this->input->get('bill_begin_date');        $end_date = $this->input->get('bill_end_date');        $pay_status = $this->input->get('bill_payed_status');        $notify_for_time = $this->input->get('bill_notify_for_time');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Moneypay_model');        $arrayres = $this->Moneypay_model->sqlTogetList_bill_list($village_id,$begin_date,$end_date,$pay_status,$notify_for_time,$keyword,$page, $this->user_per_page);        $data = $this->Moneypay_model->getList_bill_list($arrayres['1']);        echo $data;    }    public function update_property(){        $village_id = $_SESSION['village_id'];        $building_code = $this->input->post('building_code');        $ppe_payable= $this->input->post('ppe_payable');        $change_reason = $this->input->post('change_reason');        $if_standard_date = $this->input->post('if_standard_date');        $if_standard = $this->input->post('if_standard');        $this->load->model('Moneypay_model');        $this->Moneypay_model->update_property($building_code,$ppe_payable,$change_reason,$if_standard_date,$if_standard);    }    public function getbuilding_type(){        $building_type = $this->input->post('building_type');        $this->load->model('Moneypay_model');        $res=$this->Moneypay_model->getbuilding_type($building_type);        print_r(json_encode($res));    }    public function getbiz_type(){        $biz_type = $this->input->post('biz_type');        $this->load->model('Moneypay_model');        $res=$this->Moneypay_model->getbiz_type($biz_type);        print_r(json_encode($res));    }    public function getwater(){        $this->load->model('Moneypay_model');        $res=$this->Moneypay_model->getwater();        print_r(json_encode($res));    }    public function change_history(){        $building_type = $this->input->get('building_type');        $this->load->model('Moneypay_model');        $res=$this->Moneypay_model->change_history($building_type);        print_r(json_encode($res));    }    public function change_history_pkg_fee(){        $biz_type = $this->input->get('biz_type');        $this->load->model('Moneypay_model');        $res=$this->Moneypay_model->change_history_pkg_fee($biz_type);        print_r(json_encode($res));    }    public function change_history_water_fee(){        $this->load->model('Moneypay_model');        $res=$this->Moneypay_model->change_history_water_fee();        print_r(json_encode($res));    }    public function change_history_bill_list(){        $code = $this->input->get('code');        $this->load->model('Moneypay_model');        $res=$this->Moneypay_model->change_history_bill_list($code);     /*   print_r(json_encode($res));*//*echo $res;exit;*/        print_r($res['0']['notify_info']);    }    public function insert_property(){        $building_type = $this->input->post('building_type');        $change_date = $this->input->post('change_date');        $fee_standard = $this->input->post('fee_standard');        $this->load->model('Moneypay_model');        $code=$this->Moneypay_model->getLatestCode('village_type_ppe_fee');        $code=$code?$code+1:1000001;        $res=$this->Moneypay_model->insert_property($code,$building_type,$change_date,$fee_standard);        print_r(json_encode($res));    }    public function insert_pkg_fee(){        $biz_type = $this->input->post('biz_type');        $change_date = $this->input->post('change_date');        $fee_standard = $this->input->post('fee_standard');        $this->load->model('Moneypay_model');        $code=$this->Moneypay_model->getLatestCode('village_pkg_s_fee');        $code=$code?$code+1:1000001;        $res=$this->Moneypay_model->insert_pkg_fee($code,$biz_type,$change_date,$fee_standard);        print_r(json_encode($res));    }    public function insert_water_fee(){        $change_date = $this->input->post('change_date');        $fee_standard = $this->input->post('fee_standard');        $this->load->model('Moneypay_model');        $code=$this->Moneypay_model->getLatestCode('village_water_fee');        $code=$code?$code+1:1000001;        $res=$this->Moneypay_model->insert_water_fee($code,$change_date,$fee_standard);        print_r(json_encode($res));    }    public function bill_list()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Moneypay_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $village_name = $_SESSION['village_name'];        $village_person_code = $_SESSION['person_code'];        $username=$_SESSION['username'];        $treeNav_data=$this->Building_model->getBuildingTreeData($village_id);        $begin_date=$this->input->get('bill_begin_date');        $end_date = $this->input->get('bill_end_date');        $pay_status = $this->input->get('bill_payed_status');        $notify_for_time = $this->input->get('bill_notify_for_time');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'bill_list';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Moneypay_model->sqlTogetList_bill_list($village_id,$begin_date,$end_date,$pay_status,$notify_for_time,$keyword,$page, $this->user_per_page);        $total = $this->Moneypay_model->getTotal($arrayres['0'],$this->user_per_page);        $total_all= $this->Moneypay_model->getTotal_all($arrayres['0']);        $data['total'] = $total;        $data['village_name'] = $village_name;        $data['village_person_code'] = $village_person_code;        $data['total_all'] = $total_all;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/bill_list', $data);    }    public function get_notify()    {        $village_id = $_SESSION['village_id'];        $person=$this->input->get('person');        $building= $this->input->get('building');        $date= $this->input->get('date');        $car_lisence= $this->input->get('car_lisence');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $this->load->model('Moneypay_model');        $res = $this->Moneypay_model->sqlTogetList_bill_list_notify($village_id,$person,$building,$date,$car_lisence,$page, $this->user_per_page);        $data = $this->Moneypay_model->getList_bill_list($res);        $total_all= $this->Moneypay_model->getTotal_all($res);        $dataArray=array($data,$total_all);        print_r(json_encode($dataArray));      /*  $this->load->view('app/bill_list', $total_all);*/    }    public function getnotify_person()    {        $this->load->model('Moneypay_model');        $name = $this->input->post('name');        $res = $this->Moneypay_model->getnotify_person($name);        print_r(json_encode($res));    }    public function notice_list()    {        if (!isset($_SESSION['username'])) {            redirect('Login');        }        $this->load->model('Moneypay_model');        $this->load->model('Building_model');        $village_id = $_SESSION['village_id'];        $username=$_SESSION['username'];        $treeNav_data=$this->Building_model->getBuildingTreeData($village_id);        $building_code = $this->input->get('building_code');        $parent_code = $this->input->get('parent_code');        $begin_date=$this->input->get('order_begin_date');        $end_date=$this->input->get('order_end_date');        $keyword = $this->input->get('keyword');        $page = $this->input->get('page');        $page = $page ? $page : '1';        $data['nav'] = 'notice_list';        $data['username'] = $username;        $data['at_url']= $this->at_url;        $data['treeNav_data'] = $treeNav_data;        $arrayres = $this->Moneypay_model->sqlTogetList_order_fee($village_id,$begin_date,$end_date,$keyword,$page, $this->user_per_page);        $total = $this->Moneypay_model->getTotal($arrayres['0'],$this->user_per_page);        $data['total'] = $total;        $data['page'] = $page >= $total ? $total : $page;        $data['pagesize'] = $this->user_per_page;        $this->load->view('app/notice_list', $data);    }    public function addContent(){        $code = $this->input->post('messagecode');        $content = $this->input->post('content');        $bill_amount = $this->input->post('bill_amount');        $create_time = $this->input->post('create_time');        $html = str_get_html($content);        $url = $this->msg_ip;        // $url = $_SERVER['SERVER_ADDR'];        // $url = "119.23.56.17";        $new_html = $html;        //补全路径,加上http://和服务器ip        $base_url = 'http://'.$url;        //对所有的有链接的元素(img和src)补全链接路径        foreach($new_html->find('[src]') as $key => $img){            $new_src = $base_url.$img->src;            //链接重新赋值            $img->src = $new_src;        }        //根据new_html生成一个静态html文件        // 上级目录        $parent_dir = dirname(dirname(__FILE__));        //得到模板文件        $mobanpath= $parent_dir."/message_temp/bill_temp.html";        if(!file_exists($mobanpath)){            die("没有模板文件");        }        //打开模板文件        $fp=fopen($mobanpath,'r');        //读取模板文件        $str=fread($fp,filesize($mobanpath));        //将接收到的字段,替换模板文件的字段['a','b','c'],['d','e','f']        $str=str_replace(['{content}','{bill_amount}','{create_time}'],[$new_html,$bill_amount,$create_time],$str);       /* $str1=str_replace("{bill_amount}",$bill_amount,$str);        $str2=str_replace("{create_time}",$create_time,$str);*/        //生成静态页面的文件夹路径        $folderpath="./messagelist/";        //如果没有这个文件夹就创建一个        if(!file_exists($folderpath)){            mkdir($folderpath);        }        //生成文件名字,加上viilage_id用以区别        $filename=$_SESSION['village_id'].'_'.$code.".html";        //生成文件路径        $filepath="{$folderpath}{$filename}";        //判断是否有此文件        if(file_exists($filepath)){            //有,先删除,再创建            unlink($filepath);        }        $fp=fopen($filepath,"w");        fwrite($fp,$str);    /*    fwrite($fp,$str1);        fwrite($fp,$str2);*/        fclose($fp);        $first_dir = basename(dirname($parent_dir));        $html_path = $base_url.'/'.$first_dir.'/messagelist/'.$filename;        //返回文件绝对路径        print_r(json_encode($html_path));    }    public function addMessage(){        $code = $this->input->post('messagecode');        $msg_type = $this->input->post('msg_type');        $if_cycle = $this->input->post('if_cycle');        $cycle_type = $this->input->post('cycle_type');        $if_bill = $this->input->post('if_bill');        $bill_amount = $this->input->post('bill_amount');        $if_receipt = $this->input->post('if_receipt');        $msg_title = $this->input->post('msg_title');        $msg_link = $this->input->post('msg_link');        $msg_img = $this->input->post('msg_img');        $target_type = $this->input->post('target_type');        $target = $this->input->post('target');        $push_end_date = $this->input->post('push_end_date');        $push_start_date = $this->input->post('push_start_date');        $village_id = $_SESSION['village_id'];        $now=date('Y-m-d H:i',time());        $this->load->model('Message_model');        $user = $this->Message_model->getUser($_SESSION['username']);        //获取当前登录用户的身份标识        $person_code = $user['person_code'];        //获取当客户端ip        $create_ip = $_SERVER['REMOTE_ADDR'];        //web端都是人工创建,类型为1        $create_type = '2';  /*      //给推送对象加上花括号        $target = '{'.$target.'}';*/        //表示立即推送消息,推送时间为当前        if($if_cycle==101){            $push_start_date = $now;        }        if(!$cycle_type){            $cycle_type = null;        }        if(!$push_end_date){            $push_end_date = null;        }        //写入数据        $res = $this->Message_model->insertMessage($msg_type,$village_id,$target_type,$target,$if_cycle,$cycle_type,$if_bill,$bill_amount,$person_code,$if_receipt,$create_type,$create_ip,$msg_img,$msg_title,$msg_link,$code,$push_end_date,$push_start_date);        if($res==true){            $data['message'] = '信息操作成功';        }        else {            $data['message'] = '信息操作失败';        }        print_r(json_encode($data));    }public function getnotify_info(){    $this->load->model('Moneypay_model');    $code = $this->input->post('bill_code');    $village_id = $_SESSION['village_id'];    $res = $this->Moneypay_model->getnotify_info($village_id,$code);    print_r(json_encode($res));}    public function addnotify_info(){        $this->load->model('Moneypay_model');        $code = $this->input->post('bill_code');        $new_notify_info= $this->input->post('new_notify_info');        $village_id = $_SESSION['village_id'];        $res = $this->Moneypay_model->addnotify_info($village_id,$code,$new_notify_info);    }}